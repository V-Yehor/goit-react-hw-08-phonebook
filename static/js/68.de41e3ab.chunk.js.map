{"version":3,"file":"static/js/68.de41e3ab.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-top: 30px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  list-style: circle;\n  margin-left: 30px;\n`;\n\nexport const ListItemBtn = styled.button`\n  display: inline-block;\n  border: 1px solid grey;\n  border-radius: 5px;\n  background-color: white;\n  cursor: pointer;\n`;\n","// import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { List, ListItem, ListItemBtn } from './ContactList.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectContacts, selectFilter } from '../../redux/contacts/selectors';\n// import { selectContacts } from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const stateFilter = useSelector(selectFilter);\n\n  const visibleContacts = contacts.filter(contact => {\n    const hasFilteredName = contact.name\n      .toLowerCase()\n      .includes(stateFilter.toLowerCase());\n\n    return hasFilteredName;\n  });\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <>\n      {visibleContacts.length > 0 && (\n        <List>\n          {visibleContacts.map(contact => (\n            <ListItem key={contact.id}>\n              <p>\n                {contact.name}: {contact.number}\n              </p>\n              <ListItemBtn onClick={() => handleDelete(contact.id)}>\n                Delete\n              </ListItemBtn>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n","import { Field, Form } from 'formik';\nimport { styled } from 'styled-components';\n\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  width: 500px;\n  border: 1px solid black;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormField = styled(Field)`\n  margin-top: 10px;\n  width: 200px;\n`;\n\nexport const FormBtn = styled.button`\n  display: block;\n  width: 150px;\n  border-radius: 5px;\n  background-color: lightblue;\n  cursor: pointer;\n`;\n","import { Formik } from 'formik';\nimport {\n  FormWrapper,\n  FormField,\n  FormLabel,\n  FormBtn,\n} from './ContactForm.styled';\n\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nconst contactsSheme = Yup.object().shape({\n  name: Yup.string().required('Required'),\n  number: Yup.string().required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const conacts = useSelector(selectContacts);\n\n  const handleSubmit = value => {\n    const hasName = conacts.some(contact => contact.name === value.name);\n    if (hasName) {\n      alert(`${value.name} is already in contacts.`);\n      return;\n    } else {\n      dispatch(addContact(value));\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactsSheme}\n      onSubmit={(values, actions) => {\n        handleSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <FormWrapper>\n        <FormLabel>\n          Name\n          <FormField name=\"name\" />\n        </FormLabel>\n        <FormLabel>\n          Number\n          <FormField name=\"number\" />\n        </FormLabel>\n        <FormBtn type=\"submit\">Add contact</FormBtn>\n      </FormWrapper>\n    </Formik>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const FilterText = styled.p`\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterText } from './Filter.styled';\nimport { setStoreFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nexport const Filter = () => {\n  const currentFilter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const onSetFilter = newSearch => {\n    dispatch(setStoreFilter(newSearch));\n  };\n  return (\n    <>\n      <FilterText>Find contact by name</FilterText>\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Type name\"\n        value={currentFilter}\n        onChange={evt => onSetFilter(evt.target.value)}\n      />\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\nimport { Filter } from '../components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <div>{isLoading && !error && <b>Request in progress...</b>}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","ListItemBtn","_templateObject3","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactList","dispatch","useDispatch","useSelector","stateFilter","visibleContacts","contact","name","toLowerCase","includes","_jsx","_Fragment","children","length","map","_jsxs","number","onClick","contactId","id","deleteContact","FormWrapper","Form","FormLabel","FormField","Field","FormBtn","_templateObject4","contactsSheme","Yup","shape","required","ContactForm","conacts","Formik","initialValues","validationSchema","onSubmit","values","actions","value","some","alert","concat","addContact","resetForm","type","FilterText","Filter","currentFilter","placeholder","onChange","evt","newSearch","target","setStoreFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}